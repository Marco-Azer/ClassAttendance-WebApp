/**
 * Created by marcoazer on 15-09-10.
 */

/**
    Servant Struct:
    {
        _id        : ID             (INT Generated by MongoDB)
        fname      : First Name     (String)*
        lname      : Last Name      (String)*
        mname      : Middle Name    (String)
        gender     : Gender    		(Char(1))*
        age        : Age            (INT)
        dob        : Date Of Birth  (Date)*
        phone      : Phone Number   (String)
        curClassId : Class Serving  (INT)*
        grade      : Grade Serving  (Char(2))*
        attendance : Dates Attended (Array of dates)
    }
*/

var collec = 'servant';
var assert = require('assert');

module.exports = {
// Inserts
    InsertServant : function(db, srvnt, callback){
    	db.collection(collec).insertOne(srvnt, function(err, data){
    		assert.equal(null, err);
    		console.log("Servant was inserted properly");
    		//callback(data);
    	});
    },

    InsertServants : function(db, srvnts, callback){
    	db.collection(collec).insert(srvnts, function(err, data){
    		assert.equal(null, err);
    		console.log("Servants were inserted properly");
    		callback(data);
    	});
    },

    SetMname : function(db, id, mname, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {"mname": mname},
            function(err, data){
                assert.equal(null, err);
                console.log("Middle Name was inserted properly");
                callback(data);
            });
    },

    SetAge : function(db, id, age, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {"age": age},
            function(err, data){
                assert.equal(null, err);
                console.log("Age was inserted properly");
                callback(data);
            });
    },

    SetPhone : function(db, id, phone, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {"phone": phone},
            function(err, data){
                assert.equal(null, err);
                console.log("Phone was inserted properly");
                callback(data);
            });
    },

    InsertAttendance : function(db, id, date, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {$push: {"attendance": date}},
            function(err, data){
                assert.equal(null, err);
                console.log("Attendance date was inserted properly");
                callback(data);
            }
        );
    },

    // Updates
    SetFname : function(db, id, fname, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {"fname": fname},
            function(err, data){
                assert.equal(null, err);
                console.log("First Name was set properly");
                callback(data);
            });
    },

    SetLname : function(db, id, Lname, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {"lname": Lname},
            function(err, data){
                assert.equal(null, err);
                console.log("Last Name was set properly");
                callback(data);
            });
    },

    SetGender : function(db, id, gender, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {"gender": gender},
            function(err, data){
                assert.equal(null, err);
                console.log("Gender was set properly");
                callback(data);
            });
    },


    SetDob : function(db, id, dob, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {"dob": dob},
            function(err, data){
                assert.equal(null, err);
                console.log("Day of birth was set properly");
                callback(data);
            });
    },


    SetGrade : function(db, id, grade, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {"grade": grade},
            function(err, data){
                assert.equal(null, err);
                console.log("Grade was set properly");
                callback(data);
            });
    },

    SetClass : function(db, id, cid, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {"curClassId": cid},
            function(err, data){
                assert.equal(null, err);
                console.log("Class was set properly");
                callback(data);
            });
    },

    // /srvnt?fname=value1&lname=value2&dob=value3
    GetServant : function(db, req){
        var fname = req.param('fname');
        var lname = req.param('lname');
        var year = req.param('year');
        var month = req.param('month');
        var day = req.param('day');

        var cursor = db.collection(collec).find({
            "fname": fname,
            "lname": lname,
            "dob":{"year": year, "month": month, "day": day}
        });

        return cursor;
    },

    // /srvntgndr?gender=value1
    GetServantByGender : function(db, req){
        var gender = req.param('gender');

        var cursor = db.collection(collec).find({
            "gender": gender
        }).sort({"fname": 1, "lname": 1});

        return cursor;
    },

    // /srvntbyclass
    GetServantByClass : function(db, req){
        var cid = req.param('cid');

        var cursor = db.collection(collec).find({
            "curClassId": cid
        }).sort({"fname": 1, "lname": 1});

        return cursor;
    },

    GetServantByGrade : function(db, req){
        var grade = req.param('grade');

        var cursor = db.collection(collec).find({
            "grade": grade
        }).sort({"fname": 1, "lname": 1});

        return cursor;
    },

    GetServantByAge : function(db, req){
        var age = req.param('age');

        var cursor = db.collection(collec).find({
            "age": age
        }).sort({"fname": 1, "lname": 1});

        return cursor;
    },

    GetServantByAttendance : function(db, req){
        var year = req.param('year');
        var month = req.param('month');
        var day = req.param('day');

        var cursor;

        if(day === undefined){
            cursor = db.collection(collec).find({
                "attendance.year": year,
                "attendance.month": month,
                "attendance.day": day
            });
        }
        else if(month === undefined){
            cursor = db.collection(collec).find({
                "attendance.year": year,
                "attendance.month": month
            });
        }
        else{
            cursor = db.collection(collec).find({
                "attendance.year": year
            });
        }

        cursor.sort({"fname": 1, "lname": 1});

        return cursor;
    },
}