/**
  Student Struct:
    {
        _id        : ID                         (INT Generated by MongoDB)
        "fname"      : First name                 (String)*
        "lname"      : Last name                  (String)*
        "mname"      : Middle Name                (String)
        "gender"     : Gender                     (Char(1))*
        "age"        : Age                        (INT)*
        "grade"      : Grade                      (Char(2))*
        "dob"        : Date Of Birth              (Date)*
        "phone"      : Phone Number               (String)
        "emergNum"   : Emergency Contanct Number  (String)
        "emergName" : Emergency Contanct Name    (String)
        "addr"       : Address                    (String)*
        "pcode"      : Postal Code                (String)
        "curClassId" : Current Class ID           (INT References Struct)*
        "attendance" : Dates attended             (Array of dates)
        "outreach"   : Dates outreached           (Array of dates)
    }

*/

var collec = 'student';
var assert = require('assert');

module.exports = {

    // Inserts
    InsertStudent : function(db, student, callback){
        db.collection(collec).insertOne(student, function(err, data){
            assert.equal(null, err);
            console.log('Student was inserted properly');
        });
    },

    InsertStudents : function(db, students, callback){
        db.collection(collec).insert(students, function(err, data){
            assert.equal(null, err);
            console.log('Students were inserted properly');
            callback(data);
        });
    },

    SetMname : function(db, id, mname, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {"mname": mname},
            function(err, data){
                assert.equal(null, err);
                console.log("Middle Name was inserted properly");
                callback(data);
            });
    },

    /*UpdateStudent : function(db, id, student){
        db.collection(collec).updateOne(
            {"_id": id},
            {
                "fname": student.fname,
                "lname": student.lname,
                "mname": student.mname,
                "gender": student.gender,
                "age": student.age,
                "grade":student.grade,

            },
            function(err, data){
                assert,equal(null, err);
                console.log("Student was updated");
            });
    },*/

    SetPhone : function(db, id, phone, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {$set: {"phone": phone}},
            function(err, data){
                assert.equal(null, err);
                console.log("Phone was inserted properly");
                callback(data);
            });
    },

    SetEmergNum : function(db, id, emergnum, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {$set: {"emergNum": emergnum}},
            function(err, data){
                assert.equal(null, err);
                console.log("Emergency Number was inserted properly");
                callback(data);
            });
    },

    SetEmergName : function(db, id, emergname, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {$set: {"emergName": emergname}},
            function(err, data){
                assert.equal(null, err);
                console.log("Emergency Name was inserted properly");
                callback(data);
            });
    },

    SetPcode : function(db, id, pcode, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {$set: {"pcode": pcode}},
            function(err, data){
                assert.equal(null, err);
                console.log("Postal Code was inserted properly");
                callback(data);
            });
    },

    InsertAttendance : function(db, id, date, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {$push: {"attendance": date}},
            function(err, data){
                assert.equal(null, err);
                console.log("Attendance date was inserted properly");
                callback(data);
            }
        );
    },

    InsetOutreach : function(db, id, date, callback){
        db.collection(collec).updateOne(
            {"_id":id},
            {$push: {"outreach": date}},
            function(err, data){
                assert.equal(null, err);
                console.log("Outreach date was inserted properly");
                callback(data);
            });
    },

    // Updates

    SetFname : function(db, id, fname, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {$set: {"fname": fname}},
            function(err, data){
                assert.equal(null, err);
                console.log("First Name was set properly");
                callback(data);
            });
    },

    SetLname : function(db, id, Lname, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {$set: {"lname": Lname}},
            function(err, data){
                assert.equal(null, err);
                console.log("Last Name was set properly");
                callback(data);
            });
    },

    SetGender : function(db, id, gender, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {$set: {"gender": gender}},
            function(err, data){
                assert.equal(null, err);
                console.log("Gender was set properly");
                callback(data);
            });
    },

    SetAge : function(db, id, age, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {$set: {"age": age}},
            function(err, data){
                assert.equal(null, err);
                console.log("Age was set properly");
                callback(data);
            });
    },

    SetGrade : function(db, id, grade, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {$set: {"grade": grade}},
            function(err, data){
                assert.equal(null, err);
                console.log("Grade was set properly");
                callback(data);
            });
    },

    SetDob : function(db, id, dob, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {$set: {"dob": dob}},
            function(err, data){
                assert.equal(null, err);
                console.log("Day of birth was set properly");
                callback(data);
            });
    },

    SetAddr : function(db, id, addr, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {$set: {"addr": addr}},
            function(err, data){
                assert.equal(null, err);
                console.log("Address was set properly");
                callback(data);
            });
    },

    SetClass : function(db, id, cid, callback){
        db.collection(collec).updateOne(
            {"_id": id},
            {$set: {"curClassId": cid}},
            function(err, data){
                assert.equal(null, err);
                console.log("Class was set properly");
                callback(data);
            });
    },

    // /stdnt?fname=value1&lname=value2&dob=value3
    GetStudent : function(db, req){
        var fname = req.param('fname');
        var lname = req.param('lname');
        var year = req.param('year');
        var month = req.param('month');
        var day = req.param('day');

        var cursor = db.collection(collec).find({
            "fname": fname,
            "lname": lname,
            "dob":{"year": year, "month": month, "day": day}
        });

        return cursor;
    },

    // /stdnt/cls/cid
    GetStudentByClass : function(db, req){
        var cid = req.param('cid');

        var cursor = db.collection(collec).find({
            "curClassId": cid
        }).sort({"fname": 1, "lname": 1});

        return cursor;
    },

    // /stdnt/age/age
    GetStudentByAge : function(db, req){
        var age = req.param('age');

        var cursor = db.collection(collec).find({
            "age": age
        }).sort({"fname": 1, "lname": 1});

        return cursor;
    },

    // /stdnt/grade/grade
    GetStudentByGrade : function(db, req){
        var grade = req.param('grade');

        var cursor = db.collection(collec).find({
            "grade": grade
        }).sort({"fname": 1, "lname": 1});

        return cursor;
    },

    // /stdnt/attnd?year=value1&month=value2&day=value3
    GetStudentByAttendance : function(db, req){
        var year = req.param('year');
        var month = req.param('month');
        var day = req.param('day');

        var cursor;

        if(day === undefined){
            cursor = db.collection(collec).find({
                "attendance.year": year,
                "attendance.month": month,
                "attendance.day": day
            });
        }
        else if(month === undefined){
            cursor = db.collection(collec).find({
                "attendance.year": year,
                "attendance.month": month
            });
        }
        else{
            cursor = db.collection(collec).find({
                "attendance.year": year
            });
        }

        cursor.sort({"fname": 1, "lname": 1});

        return cursor;
    },

    // /stdnt/outrch?year=value1&month=value2&day=value3
    GetStudentByoutreach : function(db, req){
        var year = req.param('year');
        var month = req.param('month');
        var day = req.param('day');

        var cursor;

        if(day === undefined){
            cursor = db.collection(collec).find({
                "outreach.year": year,
                "outreach.month": month,
                "outreach.day": day
            });
        }
        else if(month === undefined){
            cursor = db.collection(collec).find({
                "outreach.year": year,
                "outreach.month": month
            });
        }
        else{
            cursor = db.collection(collec).find({
                "outreach.year": year
            });
        }

        cursor.sort({"fname": 1, "lname": 1});

        return cursor;
    }
}